name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint --max-warnings=0

      - name: Build
        env:
          NEXT_PUBLIC_SUPABASE_URL: "https://stknnmgjasngbnpztgrh.supabase.co"
          NEXT_PUBLIC_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN0a25ubWdqYXNuZ2JucHp0Z3JoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3MTc0MTYsImV4cCI6MjA3MTI5MzQxNn0.baK_7KOasYpXFADIlrsQPepb3DBItM1g2U-lDBjtSg0"
          SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN0a25ubWdqYXNuZ2JucHp0Z3JoIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NTcxNzQxNiwiZXhwIjoyMDcxMjkzNDE2fQ.uuqk6bhfNFVOoG-nhZOsleBzNjfYoL_x7srcSsNnuyc"
          ADMIN_TOKEN: "cr1st1an"
          ADMIN_BOOTSTRAP_EMAILS: "cristian.gonzalez.gt@gmail.com"
          MP_PUBLIC_KEY: "APP_USR-506ca0c0-138f-49ef-9241-5866a125a6af"
          MP_ACCESS_TOKEN: "dummy-mp-access"
          NEXT_PUBLIC_MP_ENV: "sandbox"
          CI: "true"
        run: npm run build

      - name: Test /api/health handler (built)
        run: |
          node <<'JS'
          (async () => {
            const mod = require('./.next/server/app/api/health/route.js');
            const candidates = [
              mod.GET,
              mod.default,
              mod.handler,
              mod.handlers && mod.handlers.GET,
              mod.routeModule && mod.routeModule.userland && mod.routeModule.userland.GET,
            ].filter(Boolean);

            if (!candidates.length) {
              console.error('No GET-like export found. Keys:', Object.keys(mod));
              process.exit(1);
            }

            const fn = candidates[0];
            const req = new Request('http://localhost/api/health');
            const res = await fn(req, {});
            if (!res || typeof res.json !== 'function') {
              console.error('Handler did not return a Response-like object:', res);
              process.exit(1);
            }

            const data = await res.json();
            if (!data || data.ok !== true) {
              console.error('Health not OK:', data);
              process.exit(1);
            }
            if (!('env' in data)) {
              console.error('Missing env in health payload:', data);
              process.exit(1);
            }
            console.log('Health OK:', data);
          })().catch((e) => { console.error(e); process.exit(1); });
          JS
