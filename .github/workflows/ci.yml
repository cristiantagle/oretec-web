- name: Probar /api/health (build ya generado)
  shell: bash
  run: |
    node - <<'JS'
    (async () => {
      const mod = require('./.next/server/app/api/health/route.js');
      const handler =
        mod.GET ||
        mod.default ||
        mod.handler ||
        (mod.handlers && mod.handlers.GET);

      if (typeof handler !== 'function') {
        throw new Error('GET no es función en health/route.js');
      }

      const res = await handler();
      const data = await res.json();

      if (!Object.prototype.hasOwnProperty.call(data, 'env')) {
        throw new Error('Falta "env" en payload: ' + JSON.stringify(data));
      }
      if (data.ok !== true) {
        throw new Error('Health no OK: ' + JSON.stringify(data));
      }

      console.log('Health OK:', data);
    })().catch((e) => {
      console.error(e);
      process.exit(1);
    });
    JS

      - name: Verificar artefacto de /api/health (permisivo)
        run: |
          node -e "
            const fs = require('fs');
            const path = './.next/server/app/api/health/route.js';
            if (!fs.existsSync(path)) {
              console.error('No existe el artefacto de health:', path);
              process.exit(1);
            }
            const mod = require(path);
            const fn =
              mod.GET ||
              mod.default ||
              mod.handler ||
              (mod.handlers && mod.handlers.GET);

            (async () => {
              try {
                if (typeof fn === 'function') {
                  const res = await fn();
                  const data = await res.json();
                  if (!data || data.ok !== true) {
                    throw new Error('Payload inesperado: ' + JSON.stringify(data));
                  }
                  if (!('env' in data)) {
                    throw new Error('Falta env en payload: ' + JSON.stringify(data));
                  }
                  console.log('Health OK (invocado).');
                  process.exit(0);
                } else {
                  console.log('Health OK (artefacto presente, invocación directa no soportada).');
                  process.exit(0);
                }
              } catch (e) {
                console.log('Health presente, pero invocación directa no soportada:', e.message);
                process.exit(0);
              }
            })();
          "
